#BlueJ class context
comment0.target=Student
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Student\ here.\r\n\r\n\ @author\ (Homila\ Pehasara\ Thevarapperuma)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=lastName\ firstName\ totalMarks
comment1.target=Student(java.lang.String,\ java.lang.String,\ double)
comment10.params=fName
comment10.target=void\ printStudentData(java.lang.String)
comment10.text=\r\n\ Below\ code\ shows\ how\ the\ lines\ are\ separated\ using\ commas\ as\ the\ delimeter\ &\r\n\ checks\ whether\ there\ are\ sufficient\ data\ to\ proceed\ &\ display\ the\ student\ information\r\n\ along\ with\ the\ assignment\ marks\ total.\r\n
comment11.params=th
comment11.target=void\ studentMarksThreshold(double)
comment11.text=\r\n\ Below\ code\ shows\ how\ the\ system\ checks\ the\ student\ marks\ after\ reading\ the\ CSV\ '\r\n\ file\ for\ certain\ threshold.\r\n
comment12.params=hL
comment12.target=void\ printStudentHighestAndLowest(java.lang.String)
comment2.params=
comment2.target=java.lang.String\ getlastName()
comment3.params=
comment3.target=java.lang.String\ getfirstName()
comment4.params=
comment4.target=java.lang.String\ getstudentID()
comment5.params=
comment5.target=double\ gettotalMarks()
comment6.params=
comment6.target=double\ getassign1()
comment7.params=
comment7.target=double\ getassign2()
comment8.params=
comment8.target=double\ getassign3()
comment9.params=args
comment9.target=void\ main(java.lang.String[])
numComments=13
